# Makefile generated by ChatGPT with its explanations.
NAME = push_swap 
# creating an executable called push_swap.

SRCS = push_swap.c src/input.c src/stack.c src/sort.c src/operations.c src/utils.c
# source files (.c) to build the program.

OBJS = $(SRCS: .c=.o)
# substitutes the c files with o files.

LIBFT_DIR = libft/
# directory of the libft project
LIBFT = $(LIBFT_DIR)libft.a
# reference to the compiled file (libft.a)

PRINTF_DIR = printf/
# directory of the printf project
PRINTF = $(PRINTF_DIR)printf.a
# reference to the compiled file (printf.a)

CC = cc
# compiler 
CFLAGS = -Wall -Wextra -Werror
# enable all warnings (and additional ones) and treat them as errors.

all: $(LIBFT) $(PRINTF) $(NAME)
	# Default target that builds the executable called push_swap by ensuring that $(NAME) is created

$(NAME): $(OBJS) $(LIBFT) $(PRINTF)
	# defining the dependencies
	$(CC) $(CFLAGS) $(OBJS) -o $(NAME) $(LIBFT) $(PRINTF)
	# it compiles push_swap with the flags and links the object files with the libft.a and printf.a libraries
$(LIBFT):
	# it makes sure that libft is compiled before building push_swap
	make -C $(LIBFT_DIR)
	# It goes to the libft/ directory and runs the Makefile inside it to generate the libft.a file.
$(PRINTF):
	# it makes sure that printf is compiled before building push_swap
	make -C $(PRINTF_DIR)
	# It goes to the printf/ directory and runs the Makefile inside it to generate the printf.a file.

clean:
	rm -f $(OBJS)
	# it forcefully deletes all the compiled files (.o files)
	make clean -C $(LIBFT_DIR)
	# it cleans the objest files from the libft/ directory
	make clean -C $(PRINTF_DIR)
	# it cleans the object files from the printf/ directory
fclean: clean
	# extending the clean target
	rm -f $(NAME)
	# it forcefully deletes the push_swap executable
	make fclean -C $(LIBFT_DIR)
	# it runs make fclean inside the libft/ directory to remove the libft.a file
	make fclean -C $(PRINTF_DIR)
	# it runs make fclean inside the printf/ directory to remove the printf.a file
re: fclean all

